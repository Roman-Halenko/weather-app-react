{"version":3,"sources":["js/components/ListItem.js","js/components/AutoComplete.js","js/components/Search.js","js/Data.js","js/components/CurrentWeather.js","js/components/WeatherForecast/SingleDayWeather/SingleDayWeather.js","js/components/WeatherForecast/WeatherForecast.js","js/components/App.js","index.js"],"names":["ListItem","_ref","city","select","html","react_default","a","createElement","onClick","dangerouslySetInnerHTML","__html","AutoComplete","state","_this2","this","foundCities","props","className","map","components_ListItem","key","id","Component","Search","_this$props","onSearchInput","onSearcFocus","onSearcBlur","searchFocused","onFocus","onBlur","placeholder","type","onChange","length","components_AutoComplete","apiURL","appID","weatherIcon","iconCode","concat","API","cityID","period","arguments","undefined","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CurrentWeather","weatherData","availableUnits","isAvailableUnitsShown","getWeatherData","cityId","fetch","then","response","json","dt","country","sys","name","icon","weather","description","temperature","main","temp","_this","setState","toggleAvailableUnitsVisib","prevProps","Object","keys","_this$state$weatherDa","unitName","onUnitChange","blured","dataCalcDate","Date","dataCalcDay","toLocaleDateString","weekday","dataCalcTime","hours","getHours","padStart","minutes","getMinutes","calcTemperature","src","alt","unit","SingleDayWeather","day","weatherIconCode","reduce","acc","value","replace","hasOwnProperty","wic","b","weatherIconUrl","weatherDecription","tempRange","_period$main","temp_min","temp_max","min","max","Infinity","WeatherForecast","dailyWeatherForecastData","groupWeatherData","data","weekdayName","push","list","catch","err","console","error","WeatherForecast_SingleDayWeather_SingleDayWeather","App","defaultCityId","selectedCityId","temperatureUnit","firebaseApp","firebase","initializeApp","database","userInput","target","regex","RegExp","ref","orderByChild","startAt","limitToFirst","once","snap","relevant–°ities","values","val","filter","e","match","forEach","onListItemSelect","selectedCity","setTimeout","changeTemperatureUnit","Math","round","_this$state","Search_Search","CurrentWeather_CurrentWeather","WeatherForecast_WeatherForecast","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.da468a9a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ListItem({city, select}) {\n\n    const {html} = city;\n\n    return (\n        <li onClick={() => select(city)} dangerouslySetInnerHTML={{__html: html}}></li>\n    )\n}\n\nexport default ListItem;\n","import React, {Component} from 'react';\n\nimport ListItem from './ListItem';\n\nclass AutoComplete extends Component {\n\n    state = {};\n\n    render() {\n        const {foundCities} = this.props;\n\n        return (\n            <ul className=\"auto-complete\">\n                {foundCities.map(city => (\n                    <ListItem\n                        select={this.props.select}\n                        key={city.id}\n                        city={city}\n                    />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\nimport AutoComplete from './AutoComplete';\n\nexport default class Search extends Component {\n\n    render() {\n        const {foundCities, onSearchInput, onSearcFocus, onSearcBlur, searchFocused} = this.props;\n\n        return (\n            <div className='search-bar' onFocus={onSearcFocus} onBlur={onSearcBlur}>\n                <input\n                    placeholder='Search'\n                    className='search-field'\n                    type='search'\n                    onChange={onSearchInput}\n                />\n                {foundCities.length && searchFocused\n                    ? <AutoComplete select={this.props.select} foundCities={foundCities}/>\n                    : null}\n            </div>\n        )\n    }\n}\n","const apiURL = 'https://api.openweathermap.org/data/2.5/';\nconst appID = '1d0043e9a6077c0e96a2cea071bf251b';\n\nexport function weatherIcon(iconCode) {\n    return `http://openweathermap.org/img/wn/${iconCode}@2x.png`;\n} \n\nexport function API(cityID, period = 'weather') {\n    return `${apiURL + period}?id=${cityID}&APPID=${appID}`;\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAEpkcjRZPTl1kH97sTXc-nkLJ-mJ6DHn8\",\n    authDomain: \"weather-app-f1e4e.firebaseapp.com\",\n    databaseURL: \"https://weather-app-f1e4e.firebaseio.com\",\n    projectId: \"weather-app-f1e4e\",\n    storageBucket: \"weather-app-f1e4e.appspot.com\",\n    messagingSenderId: \"1022251616365\",\n    appId: \"1:1022251616365:web:e347162dfdc34d178e9764\"\n};\n","import React, { Component } from \"react\"\nimport {API, weatherIcon} from \"../Data\"\n\n\nexport default class CurrentWeather extends Component {\n    state = {\n        weatherData: {},\n        availableUnits: ['C', 'F', 'K'],\n        isAvailableUnitsShown: false\n    }\n\n    getWeatherData = cityId => {\n        fetch( API(cityId) )\n            .then( response => response.json())\n            .then( response => {\n                let weatherData = {\n                    dt: response.dt,\n                    country: response.sys.country,\n                    name: response.name,\n                    icon: response.weather[0].icon,\n                    id: response.weather[0].id,\n                    description: response.weather[0].description,\n                    temperature: response.main.temp,\n                };\n\n                this.setState({weatherData: weatherData})\n            })\n    }\n\n    toggleAvailableUnitsVisib = () => {\n        this.setState({isAvailableUnitsShown: !this.state.isAvailableUnitsShown});\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        if (Object.keys(this.state.weatherData).length === 0) return null;\n\n        const {dt, icon, description, country, name, temperature} = this.state.weatherData;\n        const {availableUnits} = this.state;\n        const {unitName, onUnitChange, blured} = this.props;\n        const dataCalcDate = new Date(dt*1000);\n        const dataCalcDay = dataCalcDate.toLocaleDateString('en', {weekday: 'long'});\n        const dataCalcTime = {\n            hours: `${dataCalcDate.getHours()}`.padStart(2, '0'),\n            minutes: `${dataCalcDate.getMinutes()}`.padStart(2, '0')\n        }\n\n        const temp = this.props.calcTemperature(temperature, unitName);\n\n        return (\n            <div className={`content ${blured ? 'blured' : ''}`}>\n                <h1 className=\"title\">{name}, {country}</h1>\n                <span>{dataCalcDay} {dataCalcTime.hours}:{dataCalcTime.minutes}</span>\n                <p className=\"description\">{description}</p>\n                <img className=\"weather-icon\" src={weatherIcon(icon)} alt={description}/>\n                <div className=\"temperature\">{temp}\n                    <ul className=\"temperature-units\">\n                        <li className=\"unit\" onClick={this.toggleAvailableUnitsVisib}>\n                            ¬∞{unitName}\n                        </li>\n                        {this.state.isAvailableUnitsShown\n                            ? availableUnits.map(unit =>\n                                unit !== unitName\n                                    ? <li className=\"unit\" key={unit} onClick={() => onUnitChange(unit)}>{unit}</li>\n                                    : null)\n                            : null\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {weatherIcon} from '../../../Data';\n\nconst SingleDayWeather = ({day, weatherData, unitName, calcTemperature}) => {\n\n    function getTempRange() {\n\n        return weatherData.reduce( (acc, period) => {\n\n            const {temp_min, temp_max} = period.main;\n\n            acc.min = temp_min < acc.min ? temp_min : acc.min;\n            acc.max = temp_max > acc.max ? temp_max : acc.max;\n\n            return acc;\n\n        }, {min: Infinity, max: -Infinity});\n    }\n\n    const weatherIconCode = weatherData.reduce( (acc, value) => {\n\n        const icon = value.weather[0].icon.replace(/[a-z]/g, '');\n\n        acc[icon] = acc.hasOwnProperty(icon) ? acc[icon] + 1 : 1;\n\n        return acc;\n    }, {});\n\n    const wic = Object.keys(weatherIconCode).reduce((a, b) =>\n        weatherIconCode[a] > weatherIconCode[b] ? a : b);\n\n    const weatherIconUrl = weatherIcon(`${wic}d`);\n    const weatherDecription = weatherData[0].weather[0].description;\n    const tempRange = getTempRange();\n\n    return (\n        <li key={weatherData[0].dt}>\n            <div>{day}</div>\n            <img className=\"weather-icon\"\n                src={weatherIconUrl}\n                alt={weatherDecription}\n            />\n            <div>{calcTemperature(tempRange.max, unitName)}¬∞\n                <span className=\"min-temp\"> {calcTemperature(tempRange.min, unitName)}¬∞</span>\n            </div>\n        </li>\n    )\n}\n\nexport default SingleDayWeather;","import React, { Component } from 'react'\nimport {API} from '../../Data'\nimport {SingleDayWeather} from './SingleDayWeather'\n\n\nexport default class WeatherForecast extends Component {\n    state = {\n        dailyWeatherForecastData: {},\n    }\n\n    groupWeatherData = data => {\n        return data.reduce((acc, period) => {\n            let calcDate = new Date(period.dt*1000);\n            let weekdayName = calcDate.toLocaleDateString('en', {weekday: 'long'});\n\n            if (!acc[`${weekdayName}`]) {\n                acc[`${weekdayName}`] = [];\n            };\n            acc[`${weekdayName}`].push(period);\n\n            return acc;\n        }, {})\n    }\n\n    getWeatherData = cityId => {\n        fetch( API(cityId, 'forecast') )\n            .then( response => response.json())\n            .then( response => {\n                let dailyWeatherForecastData = this.groupWeatherData(response.list);\n                this.setState({dailyWeatherForecastData: dailyWeatherForecastData})\n            })\n            .catch(err => console.error(err))\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        const {unitName} = this.props;\n        const data = this.state.dailyWeatherForecastData;\n\n        if (Object.keys(data).length === 0) return null;\n\n        return (\n            <ul className=\"weather-forecast\">\n                {Object.keys(data).map(day => \n                    <SingleDayWeather\n                        key={day} day={day}\n                        weatherData={data[day]}\n                        unitName={unitName}\n                        calcTemperature={this.props.calcTemperature}\n                    />\n                )}\n            </ul>\n        );\n    }\n}\n","import React, { Component } from \"react\"\nimport Search from \"./Search\"\nimport {firebaseConfig} from '../Data';\nimport CurrentWeather from \"./CurrentWeather\"\nimport {WeatherForecast} from \"./WeatherForecast\"\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nexport default class App extends Component {\n\n    state = {\n        defaultCityId: 703447,\n        selectedCityId: null,\n        foundCities: [],\n        searchFocused: false,\n        temperatureUnit: 'C'\n    }\n\n    firebaseApp = firebase.initializeApp(firebaseConfig);\n    database = this.firebaseApp.database();\n\n    onSearchInput = ( {target} ) => {\n        let userInput = target.value.replace(/[^\\w\\s]/gi, '');\n        if (userInput === '' || userInput === ' ') {\n            this.setState({foundCities: []});\n        } else {\n            let regex = new RegExp(userInput, 'i');\n            this.database.ref('/').orderByChild('name')\n                .startAt(userInput)\n                .limitToFirst(6)\n                .once('value', snap => {\n                    let relevant–°ities = Object.values(snap.val())\n                        .filter(e => e.name.match(regex));\n\n                    relevant–°ities.forEach(e => {\n                        e.html = e.name.replace(regex, match =>\n                            `<u>${match}</u>`) + `, ${e.country}`;\n                        });\n\n                    this.setState({foundCities: relevant–°ities});\n                });\n        }\n    }\n\n    onListItemSelect = selectedCity => {\n        this.setState({selectedCityId: selectedCity.id});\n    }\n\n    onSearcFocus = () => {\n        this.setState({searchFocused: true});\n    }\n\n    onSearcBlur = () => {\n        setTimeout(() => {\n            this.setState({searchFocused: false})\n        }, 100)\n    }\n\n    changeTemperatureUnit = unit => {\n        this.setState({temperatureUnit: unit})\n    }\n\n    calcTemperature = (value, unitName) => {\n\n        switch (unitName) {\n            case 'C': value -= 273.15; break;\n            case 'F': value = value * 9/5 - 459.67; break;\n            default: break;\n        }\n\n        return Math.round(value);\n    }\n\n    render() {\n        const { selectedCityId,\n            defaultCityId,\n            foundCities,\n            searchFocused,\n            temperatureUnit } = this.state\n\n        return (\n            <div className=\"container backdrop-blur\">\n                <Search\n                    select={this.onListItemSelect}\n                    onSearchInput={this.onSearchInput}\n                    onSearcFocus={this.onSearcFocus}\n                    onSearcBlur={this.onSearcBlur}\n                    foundCities={foundCities}\n                    searchFocused={searchFocused}\n                />\n                <CurrentWeather\n                    cityId={selectedCityId || defaultCityId}\n                    blured={foundCities.length > 0 && searchFocused ? true : false}\n                    unitName={temperatureUnit}\n                    onUnitChange={this.changeTemperatureUnit}\n                    calcTemperature={this.calcTemperature}\n                />\n                <WeatherForecast\n                    cityId={selectedCityId || defaultCityId}\n                    unitName={temperatureUnit}\n                    calcTemperature={this.calcTemperature}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './js/components/App'\nimport './sass/main.sass'\n\nrender(<App/>, document.getElementById('app'))\n"],"sourceRoot":""}