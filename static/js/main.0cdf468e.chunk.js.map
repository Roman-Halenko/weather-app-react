{"version":3,"sources":["js/components/Search.js","js/Data.js","js/components/CurrentWeather.js","js/components/WeatherForecast/SingleDayWeather/SingleDayWeather.js","js/components/WeatherForecast/WeatherForecast.js","js/components/App.js","index.js"],"names":["Search","props","select","foundCities","onSearchInput","onSearcFocus","onSearcBlur","className","onFocus","onBlur","Autocomplete","id","options","getOptionLabel","option","name","country","onChange","e","val","blurOnSelect","renderInput","params","TextField","label","variant","apiURL","appID","weatherIcon","iconCode","API","cityID","period","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CurrentWeather","state","weatherData","availableUnits","isAvailableUnitsShown","getWeatherData","cityId","fetch","then","response","json","dt","sys","icon","weather","description","temperature","main","temp","setState","toggleAvailableUnitsVisib","this","prevProps","Object","keys","length","unitName","onUnitChange","blured","dataCalcDate","Date","dataCalcDay","toLocaleDateString","weekday","dataCalcTime","hours","getHours","padStart","minutes","getMinutes","calcTemperature","src","alt","onClick","map","unit","key","Component","SingleDayWeather","day","weatherIconCode","reduce","acc","value","replace","hasOwnProperty","wic","a","b","weatherIconUrl","weatherDecription","tempRange","temp_min","temp_max","min","max","Infinity","WeatherForecast","dailyWeatherForecastData","groupWeatherData","data","weekdayName","push","list","catch","err","console","error","App","defaultCityId","selectedCityId","searchFocused","temperatureUnit","firebaseApp","firebase","initializeApp","database","userInput","target","regex","RegExp","ref","orderByChild","startAt","limitToFirst","once","snap","relevant–°ities","values","filter","match","forEach","html","onListItemSelect","selectedCity","setTimeout","changeTemperatureUnit","Math","round","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cdf468e.chunk.js","sourcesContent":["import React from 'react';\n// import AutoComplete from './AutoComplete';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Search(props) {\n\n    const {select, foundCities, onSearchInput, onSearcFocus, onSearcBlur} = props;\n\n    return (\n        <div className='search-bar' onFocus={onSearcFocus} onBlur={onSearcBlur}>\n            <Autocomplete\n                id=\"combo-box-demo\"\n                options={foundCities}\n                getOptionLabel={ option => `${option.name}, ${option.country}` }\n                onChange={ (e, val) => select(val) }\n                blurOnSelect={true}\n                renderInput={ params => <TextField {...params} label=\"Search\" variant=\"outlined\" onChange={(e) => onSearchInput(e)} />}\n            />\n        </div>\n    )\n}\n","const apiURL = 'https://api.openweathermap.org/data/2.5/';\nconst appID = '1d0043e9a6077c0e96a2cea071bf251b';\n\nexport function weatherIcon(iconCode) {\n    return `http://openweathermap.org/img/wn/${iconCode}@2x.png`;\n} \n\nexport function API(cityID, period = 'weather') {\n    return `${apiURL + period}?id=${cityID}&APPID=${appID}`;\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAEpkcjRZPTl1kH97sTXc-nkLJ-mJ6DHn8\",\n    authDomain: \"weather-app-f1e4e.firebaseapp.com\",\n    databaseURL: \"https://weather-app-f1e4e.firebaseio.com\",\n    projectId: \"weather-app-f1e4e\",\n    storageBucket: \"weather-app-f1e4e.appspot.com\",\n    messagingSenderId: \"1022251616365\",\n    appId: \"1:1022251616365:web:e347162dfdc34d178e9764\"\n};\n","import React, { Component } from \"react\"\nimport {API, weatherIcon} from \"../Data\"\n\n\nexport default class CurrentWeather extends Component {\n    state = {\n        weatherData: {},\n        availableUnits: ['C', 'F', 'K'],\n        isAvailableUnitsShown: false\n    }\n\n    getWeatherData = cityId => {\n        fetch( API(cityId) )\n            .then( response => response.json())\n            .then( response => {\n                let weatherData = {\n                    dt: response.dt,\n                    country: response.sys.country,\n                    name: response.name,\n                    icon: response.weather[0].icon,\n                    id: response.weather[0].id,\n                    description: response.weather[0].description,\n                    temperature: response.main.temp,\n                };\n\n                this.setState({weatherData: weatherData})\n            })\n    }\n\n    toggleAvailableUnitsVisib = () => {\n        this.setState({isAvailableUnitsShown: !this.state.isAvailableUnitsShown});\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        if (Object.keys(this.state.weatherData).length === 0) return null;\n\n        const {dt, icon, description, country, name, temperature} = this.state.weatherData;\n        const {availableUnits} = this.state;\n        const {unitName, onUnitChange, blured} = this.props;\n        const dataCalcDate = new Date(dt*1000);\n        const dataCalcDay = dataCalcDate.toLocaleDateString('en', {weekday: 'long'});\n        const dataCalcTime = {\n            hours: `${dataCalcDate.getHours()}`.padStart(2, '0'),\n            minutes: `${dataCalcDate.getMinutes()}`.padStart(2, '0')\n        }\n\n        const temp = this.props.calcTemperature(temperature, unitName);\n\n        return (\n            <div className={`content ${blured ? 'blured' : ''}`}>\n                <h1 className=\"title\">{name}, {country}</h1>\n                <span>{dataCalcDay} {dataCalcTime.hours}:{dataCalcTime.minutes}</span>\n                <p className=\"description\">{description}</p>\n                <img className=\"weather-icon\" src={weatherIcon(icon)} alt={description}/>\n                <div className=\"temperature\">{temp}\n                    <ul className=\"temperature-units\">\n                        <li className=\"unit\" onClick={this.toggleAvailableUnitsVisib}>\n                            ¬∞{unitName}\n                        </li>\n                        {this.state.isAvailableUnitsShown\n                            ? availableUnits.map(unit =>\n                                unit !== unitName\n                                    ? <li className=\"unit\" key={unit} onClick={() => onUnitChange(unit)}>{unit}</li>\n                                    : null)\n                            : null\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {weatherIcon} from '../../../Data';\n\nconst SingleDayWeather = ({day, weatherData, unitName, calcTemperature}) => {\n\n    function getTempRange() {\n\n        return weatherData.reduce( (acc, period) => {\n\n            const {temp_min, temp_max} = period.main;\n\n            acc.min = temp_min < acc.min ? temp_min : acc.min;\n            acc.max = temp_max > acc.max ? temp_max : acc.max;\n\n            return acc;\n\n        }, {min: Infinity, max: -Infinity});\n    }\n\n    const weatherIconCode = weatherData.reduce( (acc, value) => {\n\n        const icon = value.weather[0].icon.replace(/[a-z]/g, '');\n\n        acc[icon] = acc.hasOwnProperty(icon) ? acc[icon] + 1 : 1;\n\n        return acc;\n    }, {});\n\n    const wic = Object.keys(weatherIconCode).reduce((a, b) =>\n        weatherIconCode[a] > weatherIconCode[b] ? a : b);\n\n    const weatherIconUrl = weatherIcon(`${wic}d`);\n    const weatherDecription = weatherData[0].weather[0].description;\n    const tempRange = getTempRange();\n\n    return (\n        <li key={weatherData[0].dt}>\n            <div>{day}</div>\n            <img className=\"weather-icon\"\n                src={weatherIconUrl}\n                alt={weatherDecription}\n            />\n            <div>{calcTemperature(tempRange.max, unitName)}¬∞\n                <span className=\"min-temp\"> {calcTemperature(tempRange.min, unitName)}¬∞</span>\n            </div>\n        </li>\n    )\n}\n\nexport default SingleDayWeather;","import React, { Component } from 'react'\nimport {API} from '../../Data'\nimport {SingleDayWeather} from './SingleDayWeather'\n\n\nexport default class WeatherForecast extends Component {\n    state = {\n        dailyWeatherForecastData: {},\n    }\n\n    groupWeatherData = data => {\n        return data.reduce((acc, period) => {\n            let calcDate = new Date(period.dt*1000);\n            let weekdayName = calcDate.toLocaleDateString('en', {weekday: 'long'});\n\n            if (!acc[`${weekdayName}`]) {\n                acc[`${weekdayName}`] = [];\n            };\n            acc[`${weekdayName}`].push(period);\n\n            return acc;\n        }, {})\n    }\n\n    getWeatherData = cityId => {\n        fetch( API(cityId, 'forecast') )\n            .then( response => response.json())\n            .then( response => {\n                let dailyWeatherForecastData = this.groupWeatherData(response.list);\n                this.setState({dailyWeatherForecastData: dailyWeatherForecastData})\n            })\n            .catch(err => console.error(err))\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        const {unitName} = this.props;\n        const data = this.state.dailyWeatherForecastData;\n\n        if (Object.keys(data).length === 0) return null;\n\n        return (\n            <ul className=\"weather-forecast\">\n                {Object.keys(data).map(day => \n                    <SingleDayWeather\n                        key={day} day={day}\n                        weatherData={data[day]}\n                        unitName={unitName}\n                        calcTemperature={this.props.calcTemperature}\n                    />\n                )}\n            </ul>\n        );\n    }\n}\n","import React, { Component } from \"react\"\nimport Search from \"./Search\"\nimport {firebaseConfig} from '../Data';\nimport CurrentWeather from \"./CurrentWeather\"\nimport {WeatherForecast} from \"./WeatherForecast\"\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nexport default class App extends Component {\n\n    state = {\n        defaultCityId: 703447,\n        selectedCityId: null,\n        foundCities: [],\n        searchFocused: false,\n        temperatureUnit: 'C'\n    }\n\n    firebaseApp = firebase.initializeApp(firebaseConfig);\n    database = this.firebaseApp.database();\n\n    onSearchInput = ( {target} ) => {\n        let userInput = target.value.replace(/[^\\w\\s]/gi, '');\n        if (userInput === '' || userInput === ' ') {\n            this.setState({foundCities: []});\n        } else {\n            let regex = new RegExp(userInput, 'i');\n            this.database.ref('/').orderByChild('name')\n                .startAt(userInput)\n                .limitToFirst(6)\n                .once('value', snap => {\n                    let relevant–°ities = Object.values(snap.val())\n                        .filter(e => e.name.match(regex));\n\n                    relevant–°ities.forEach(e => {\n                        e.html = e.name.replace(regex, match =>\n                            `<u>${match}</u>`) + `, ${e.country}`;\n                        });\n\n                    this.setState({foundCities: relevant–°ities});\n                });\n        }\n    }\n\n    onListItemSelect = selectedCity => {\n        if (!selectedCity) return;\n        this.setState({selectedCityId: selectedCity.id});\n    }\n\n    onSearcFocus = () => {\n        this.setState({searchFocused: true});\n    }\n\n    onSearcBlur = () => {\n        setTimeout(() => {\n            this.setState({searchFocused: false})\n        }, 100)\n    }\n\n    changeTemperatureUnit = unit => {\n        this.setState({temperatureUnit: unit})\n    }\n\n    calcTemperature = (value, unitName) => {\n\n        switch (unitName) {\n            case 'C': value -= 273.15; break;\n            case 'F': value = value * 9/5 - 459.67; break;\n            default: break;\n        }\n\n        return Math.round(value);\n    }\n\n    render() {\n        const { selectedCityId,\n            defaultCityId,\n            foundCities,\n            searchFocused,\n            temperatureUnit } = this.state\n\n        return (\n            <div className=\"container backdrop-blur\">\n                <Search\n                    select={this.onListItemSelect}\n                    onSearchInput={this.onSearchInput}\n                    onSearcFocus={this.onSearcFocus}\n                    onSearcBlur={this.onSearcBlur}\n                    foundCities={foundCities}\n                    searchFocused={searchFocused}\n                />\n                <CurrentWeather\n                    cityId={selectedCityId || defaultCityId}\n                    blured={foundCities.length > 0 && searchFocused ? true : false}\n                    unitName={temperatureUnit}\n                    onUnitChange={this.changeTemperatureUnit}\n                    calcTemperature={this.calcTemperature}\n                />\n                <WeatherForecast\n                    cityId={selectedCityId || defaultCityId}\n                    unitName={temperatureUnit}\n                    calcTemperature={this.calcTemperature}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './js/components/App'\nimport './sass/main.sass'\n\nrender(<App/>, document.getElementById('app'))\n"],"sourceRoot":""}