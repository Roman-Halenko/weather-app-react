{"version":3,"sources":["js/Data.js","js/components/ListItem.js","js/components/AutoComplete.js","js/components/Search.js","js/components/CurrentWeather.js","js/components/App.js","index.js"],"names":["apiURL","appID","cityList","require","ListItem","props","_props$city","city","id","name","country","react_default","a","createElement","onClick","console","log","AutoComplete","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","foundCities","className","map","Component","Search","handleChange","_ref","target","setState","regex","RegExp","closestCities","filter","e","match","sort","slice","type","onChange","AutoComplete_AutoComplete","CurrentWeather","data","cityId","_this2","fetch","then","response","json","sys","icon","weather","src","alt","App","selectedCityId","Search_Search","selectCity","CurrentWeather_CurrentWeather","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.86dd4508.chunk.js","sourcesContent":["const apiURL = 'https://api.openweathermap.org/data/2.5/weather?id=';\nconst appID = '&APPID=1d0043e9a6077c0e96a2cea071bf251b';\n\nexport function API(cityId) {\n    return (apiURL + cityId + appID);\n}\n\nexport const cityList = require('./city.list.json');\n","import React from 'react';\n\nexport function ListItem(props) {\n\n    const {id, name, country} = props.city;\n\n    function selectCity() {\n        console.log(id);\n    }\n\n    return (\n        <li onClick={selectCity}>{name}, {country}</li>\n    )\n}\n","import React, {Component} from 'react';\n\nimport {ListItem} from './ListItem';\n\nexport class AutoComplete extends Component {\n\n    state = {};\n\n    render() {\n        const {foundCities} = this.props;\n\n        return (\n            <ul className=\"hint-list\">\n                {foundCities.map(city => <ListItem key={city.id} city={city}/>)}\n            </ul>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\nimport {cityList} from '../Data';\nimport {AutoComplete} from './AutoComplete';\n\nexport default class Search extends Component {\n\n    state = {\n        foundCities: []\n    }\n\n    handleChange = ( {target} ) => {\n        if (target.value === '' || target.value === ' ') {\n            this.setState({foundCities: []});\n        } else {\n            let regex = new RegExp(`^${target.value}`, 'i');\n            let relevantСities = cityList.filter(e => e.name.match(regex)).sort();\n            let closestCities = relevantСities.slice(0, 6);\n            this.setState({foundCities: closestCities});\n        }\n    }\n\n    render() {\n        const {foundCities} = this.state\n\n        return (\n            <div className='search-bar'>\n                <input className='search-field' type='search' onChange={this.handleChange}/>\n                {foundCities.length > 0 ? <AutoComplete foundCities={foundCities}/> : ''}\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\"\nimport {API} from \"../Data\"\n\n\nexport default class CurrentWeather extends Component {\n    state = {\n        data: {}\n    }\n\n    componentDidMount() {\n\n        fetch( API(this.props.cityId) )\n            .then(response => response.json())\n            .then(response => this.setState({ data: response }))\n    }\n\n    render() {\n        const {name} = this.state.data;\n        const {country} = this.state.data.sys ? this.state.data.sys : '';\n        const {icon} = this.state.data.weather ? this.state.data.weather[0] : '';\n        return (\n            <div className=\"content\">\n                <h1 className=\"title\">{name+' ('+country+')'}</h1>\n                <img className=\"weather-icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"not yet\"/>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\"\nimport Search from \"./Search\"\nimport CurrentWeather from \"./CurrentWeather\"\n\n\nexport default class App extends Component {\n\n    state = {}\n\n    render() {\n        const {selectedCityId} = this.state\n\n        return (\n            <div className=\"container backdrop-blur\">\n                <Search selectCity={this.selectCity}/>\n                <CurrentWeather cityId={selectedCityId || 703447}/>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './js/components/App'\nimport './sass/main.sass'\n\nrender(<App/>, document.getElementById('app'))\n"],"sourceRoot":""}