{"version":3,"sources":["js/components/ListItem.js","js/components/AutoComplete.js","js/components/Search.js","js/Data.js","js/components/CurrentWeather.js","js/components/App.js","index.js"],"names":["ListItem","_ref","city","select","html","react_default","a","createElement","onClick","dangerouslySetInnerHTML","__html","AutoComplete","state","_this2","this","foundCities","props","className","map","components_ListItem","key","id","Component","Search","_this$props","onSearchInput","onSearcFocus","onSearcBlur","searchFocused","onFocus","onBlur","type","onChange","length","components_AutoComplete","apiURL","appID","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CurrentWeather","data","availableUnits","isAvailableUnitsShown","getWeatherData","cityID","fetch","then","response","json","_this","setState","toggleAvailableUnitsVisib","cityId","prevProps","name","country","sys","_ref3","weather","icon","description","unitType","onUnitChange","temp","main","toFixed","concat","blured","src","alt","unit","App","defaultCityId","selectedCityId","temperatureUnit","firebaseApp","firebase","initializeApp","database","userInput","target","value","replace","regex","RegExp","ref","orderByChild","startAt","limitToFirst","once","snap","relevantСities","Object","values","val","filter","e","match","forEach","onListItemSelect","selectedCity","setTimeout","changeTemperatureUnit","_this$state","Search_Search","CurrentWeather_CurrentWeather","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3a759c97.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ListItem({city, select}) {\n\n    const {html} = city;\n\n    return (\n        <li onClick={() => select(city)} dangerouslySetInnerHTML={{__html: html}}></li>\n    )\n}\n\nexport default ListItem;\n","import React, {Component} from 'react';\n\nimport ListItem from './ListItem';\n\nclass AutoComplete extends Component {\n\n    state = {};\n\n    render() {\n        const {foundCities} = this.props;\n\n        return (\n            <ul className=\"auto-complete\">\n                {foundCities.map(city => (\n                    <ListItem\n                        select={this.props.select}\n                        key={city.id}\n                        city={city}\n                    />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\nimport AutoComplete from './AutoComplete';\n\nexport default class Search extends Component {\n\n    render() {\n        const {foundCities, onSearchInput, onSearcFocus, onSearcBlur, searchFocused} = this.props;\n\n        return (\n            <div className='search-bar' onFocus={onSearcFocus} onBlur={onSearcBlur}>\n                <input\n                    className='search-field'\n                    type='search'\n                    onChange={onSearchInput}\n                />\n                {foundCities.length && searchFocused\n                    ? <AutoComplete select={this.props.select} foundCities={foundCities}/>\n                    : null}\n            </div>\n        )\n    }\n}\n","const apiURL = 'https://api.openweathermap.org/data/2.5/weather?id=';\nconst appID = '&APPID=1d0043e9a6077c0e96a2cea071bf251b';\n\nexport function API(cityID) {\n    return (apiURL + cityID + appID);\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAEpkcjRZPTl1kH97sTXc-nkLJ-mJ6DHn8\",\n    authDomain: \"weather-app-f1e4e.firebaseapp.com\",\n    databaseURL: \"https://weather-app-f1e4e.firebaseio.com\",\n    projectId: \"weather-app-f1e4e\",\n    storageBucket: \"weather-app-f1e4e.appspot.com\",\n    messagingSenderId: \"1022251616365\",\n    appId: \"1:1022251616365:web:e347162dfdc34d178e9764\"\n};\n","import React, { Component } from \"react\"\nimport {API} from \"../Data\"\n\n\nexport default class CurrentWeather extends Component {\n    state = {\n        data: {},\n        availableUnits: ['C', 'F', 'K'],\n        isAvailableUnitsShown: false\n    }\n\n    getWeatherData = (id) => {\n        fetch( API(id) )\n            .then(response => response.json())\n            .then(response => this.setState({ data: response }))\n    }\n\n    toggleAvailableUnitsVisib = () => {\n        this.setState({isAvailableUnitsShown: !this.state.isAvailableUnitsShown});\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        const {name} = this.state.data ? this.state.data : '';\n        const {country} = this.state.data.sys ? this.state.data.sys : '';\n        const {icon, description} = this.state.data.weather ? this.state.data.weather[0] : '';\n        const {availableUnits} = this.state;\n        const {unitType, onUnitChange} = this.props;\n\n        let {temp} = this.state.data.main ? this.state.data.main : '';\n        switch (unitType) {\n            case 'C': temp -= 273.15; break;\n            case 'F': temp = temp * 9/5 - 459.67; break;\n            default: break;\n        }\n        temp = temp.toFixed(1);\n\n        return (\n            <div className={`content ${this.props.blured ? 'blured' : ''}`}>\n                <h1 className=\"title\">{name} | {country}</h1>\n                <p className=\"description\">{description}</p>\n                <img className=\"weather-icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt={description}/>\n                <span className=\"temperature\">{temp}</span>\n                <ul className=\"temperature-units\">\n                    <li className=\"unit\" onClick={this.toggleAvailableUnitsVisib}>\n                        °{unitType}\n                    </li>\n                    {this.state.isAvailableUnitsShown\n                        ? availableUnits.map(unit =>\n                            unit !== unitType\n                                ? <li className=\"unit\" onClick={() => onUnitChange(unit)}>°{unit}</li>\n                                : null)\n                        : null\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\"\nimport Search from \"./Search\"\nimport {firebaseConfig} from '../Data';\nimport CurrentWeather from \"./CurrentWeather\"\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nexport default class App extends Component {\n\n    state = {\n        defaultCityId: 703447,\n        selectedCityId: null,\n        foundCities: [],\n        searchFocused: false,\n        temperatureUnit: 'C'\n    }\n\n    firebaseApp = firebase.initializeApp(firebaseConfig);\n    database = this.firebaseApp.database();\n\n    onSearchInput = ( {target} ) => {\n        let userInput = target.value.replace(/[^\\w\\s]/gi, '');\n        if (userInput === '' || userInput === ' ') {\n            this.setState({foundCities: []});\n        } else {\n            let regex = new RegExp(userInput, 'i');\n            this.database.ref('/').orderByChild('name')\n                .startAt(userInput)\n                .limitToFirst(6)\n                .once('value', snap => {\n                    let relevantСities = Object.values(snap.val())\n                        .filter(e => e.name.match(regex));\n\n                    relevantСities.forEach(e => {\n                        e.html = e.name.replace(regex, match =>\n                            `<u>${match}</u>`) + `, ${e.country}`;\n                        });\n\n                    this.setState({foundCities: relevantСities});\n                });\n        }\n    }\n\n    onListItemSelect = selectedCity => {\n        this.setState({selectedCityId: selectedCity.id});\n    }\n\n    onSearcFocus = () => {\n        this.setState({searchFocused: true});\n    }\n\n    onSearcBlur = () => {\n        setTimeout(() => {\n            this.setState({searchFocused: false})\n        }, 100)\n    }\n\n    changeTemperatureUnit = unit => {\n        this.setState({temperatureUnit: unit})\n    }\n\n    render() {\n        const { selectedCityId,\n            defaultCityId,\n            foundCities,\n            searchFocused,\n            temperatureUnit } = this.state\n\n        return (\n            <div className=\"container backdrop-blur\">\n                <Search\n                    select={this.onListItemSelect}\n                    onSearchInput={this.onSearchInput}\n                    onSearcFocus={this.onSearcFocus}\n                    onSearcBlur={this.onSearcBlur}\n                    foundCities={foundCities}\n                    searchFocused={searchFocused}\n                />\n                <CurrentWeather\n                    cityId={selectedCityId || defaultCityId}\n                    blured={foundCities.length > 0 && searchFocused ? true : false}\n                    unitType={temperatureUnit}\n                    onUnitChange={this.changeTemperatureUnit}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './js/components/App'\nimport './sass/main.sass'\n\nrender(<App/>, document.getElementById('app'))\n"],"sourceRoot":""}