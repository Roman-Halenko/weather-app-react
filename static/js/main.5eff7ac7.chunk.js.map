{"version":3,"sources":["js/components/ListItem.js","js/components/AutoComplete.js","js/components/Search.js","js/Data.js","js/components/CurrentWeather.js","js/components/App.js","index.js"],"names":["ListItem","_ref","city","select","html","react_default","a","createElement","onClick","dangerouslySetInnerHTML","__html","AutoComplete","state","_this2","this","foundCities","props","className","map","components_ListItem","key","id","Component","Search","_this$props","onSearchInput","onSearcFocus","onSearcBlur","searchFocused","onFocus","onBlur","type","onChange","length","components_AutoComplete","apiURL","appID","cityList","require","CurrentWeather","data","availableUnits","isAvailableUnitsShown","getWeatherData","cityId","fetch","then","response","json","_this","setState","toggleAvailableUnitsVisib","prevProps","name","country","sys","_ref3","weather","icon","description","unitType","onUnitChange","temp","main","toFixed","concat","blured","src","alt","unit","App","defaultCityId","selectedCityId","temperatureUnit","userInput","target","value","replace","regex","RegExp","closestCities","filter","e","match","sort","slice","forEach","onListItemSelect","selectedCity","setTimeout","changeTemperatureUnit","_this$state","Search_Search","CurrentWeather_CurrentWeather","render","App_App","document","getElementById"],"mappings":"m1qwfAWeA,MATf,SAAAC,GAAkC,IAAfC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,OAEdC,EAAQF,EAARE,KAEP,OACIC,EAAAC,EAAAC,cAAA,MAAIC,QAAS,kBAAML,EAAOD,IAAOO,wBAAyB,CAACC,OAAQN,MCkB5DO,6MAnBXC,MAAQ,2EAEC,IAAAC,EAAAC,KACEC,EAAeD,KAAKE,MAApBD,YAEP,OACIV,EAAAC,EAAAC,cAAA,MAAIU,UAAU,aACTF,EAAYG,IAAI,SAAAhB,GAAI,OACjBG,EAAAC,EAAAC,cAACY,EAAD,CACIhB,OAAQU,EAAKG,MAAMb,OACnBiB,IAAKlB,EAAKmB,GACVnB,KAAMA,cAbHoB,aCDNC,mLAER,IAAAC,EAC0EV,KAAKE,MAA7ED,EADFS,EACET,YAAaU,EADfD,EACeC,cAAeC,EAD9BF,EAC8BE,aAAcC,EAD5CH,EAC4CG,YAAaC,EADzDJ,EACyDI,cAE9D,OACIvB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aAAaY,QAASH,EAAcI,OAAQH,GACvDtB,EAAAC,EAAAC,cAAA,SACIU,UAAU,eACVc,KAAK,SACLC,SAAUP,IAEbV,EAAYkB,QAAUL,EACjBvB,EAAAC,EAAAC,cAAC2B,EAAD,CAAc/B,OAAQW,KAAKE,MAAMb,OAAQY,YAAaA,IACtD,aAdcO,aCH9Ba,EAAS,sDACTC,EAAQ,0CAMP,IAAMC,EAAWC,EAAQ,ICHXC,6MACjB3B,MAAQ,CACJ4B,KAAM,GACNC,eAAgB,CAAC,IAAK,IAAK,KAC3BC,uBAAuB,KAG3BC,eAAiB,SAACtB,GDRf,IAAauB,ECSZC,ODTYD,ECSDvB,EDRPc,EAASS,EAASR,ICSjBU,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAQ,OAAIE,EAAKC,SAAS,CAAEV,KAAMO,SAGhDI,0BAA4B,WACxBF,EAAKC,SAAS,CAACR,uBAAwBO,EAAKrC,MAAM8B,4GAIlD5B,KAAK6B,eAAe7B,KAAKE,MAAM4B,mDAGhBQ,GACXtC,KAAKE,MAAM4B,SAAWQ,EAAUR,QAChC9B,KAAK6B,eAAe7B,KAAKE,MAAM4B,yCAI9B,IACES,GAAQvC,KAAKF,MAAM4B,KAAO1B,KAAKF,MAAM4B,KAAO,IAA5Ca,KACAC,GAAWxC,KAAKF,MAAM4B,KAAKe,IAAMzC,KAAKF,MAAM4B,KAAKe,IAAM,IAAvDD,QAFFE,EAGuB1C,KAAKF,MAAM4B,KAAKiB,QAAU3C,KAAKF,MAAM4B,KAAKiB,QAAQ,GAAK,GAA5EC,EAHFF,EAGEE,KAAMC,EAHRH,EAGQG,YACNlB,EAAkB3B,KAAKF,MAAvB6B,eAJFjB,EAK4BV,KAAKE,MAA/B4C,EALFpC,EAKEoC,SAAUC,EALZrC,EAKYqC,aAEZC,GAAQhD,KAAKF,MAAM4B,KAAKuB,KAAOjD,KAAKF,MAAM4B,KAAKuB,KAAO,IAAtDD,KACL,OAAQF,GACJ,IAAK,IAAKE,GAAQ,OAAQ,MAC1B,IAAK,IAAKA,EAAc,EAAPA,EAAS,EAAI,OAKlC,OAFAA,EAAOA,EAAKE,QAAQ,GAGhB3D,EAAAC,EAAAC,cAAA,OAAKU,UAAS,WAAAgD,OAAanD,KAAKE,MAAMkD,OAAS,SAAW,KACtD7D,EAAAC,EAAAC,cAAA,MAAIU,UAAU,SAASoC,EAAvB,MAAgCC,GAChCjD,EAAAC,EAAAC,cAAA,KAAGU,UAAU,eAAe0C,GAC5BtD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eAAekD,IAAG,oCAAAF,OAAsCP,EAAtC,WAAqDU,IAAKT,IAC3FtD,EAAAC,EAAAC,cAAA,QAAMU,UAAU,eAAe6C,GAC/BzD,EAAAC,EAAAC,cAAA,MAAIU,UAAU,qBACVZ,EAAAC,EAAAC,cAAA,MAAIU,UAAU,OAAOT,QAASM,KAAKqC,2BAAnC,OACMS,GAEL9C,KAAKF,MAAM8B,sBACND,EAAevB,IAAI,SAAAmD,GAAI,OACrBA,IAAST,EACHvD,EAAAC,EAAAC,cAAA,MAAIU,UAAU,OAAOT,QAAS,kBAAMqD,EAAaQ,KAAjD,OAA0DA,GAC1D,OACR,cAzDkB/C,aCEvBgD,6MAEjB1D,MAAQ,CACJ2D,cAAe,OACfC,eAAgB,KAChBzD,YAAa,GACba,eAAe,EACf6C,gBAAiB,OAGrBhD,cAAgB,SAAAxB,GAAgB,IACxByE,EADwBzE,EAAb0E,OACQC,MAAMC,QAAQ,YAAa,IAClD,GAAkB,KAAdH,GAAkC,MAAdA,EACpBzB,EAAKC,SAAS,CAACnC,YAAa,SACzB,CACH,IAAI+D,EAAQ,IAAIC,OAAOL,EAAW,KAE9BM,EADiB3C,EAAS4C,OAAQ,SAAAC,GAAC,OAAIA,EAAE7B,KAAK8B,MAAML,KAASM,OAC9BC,MAAM,EAAG,GAC5CL,EAAcM,QAAQ,SAAAJ,GAClBA,EAAE9E,KAAO8E,EAAE7B,KAAKwB,QAAQC,EAAO,SAAAK,GAAK,YAAAlB,OAAUkB,EAAV,UAA3B,KAAAlB,OAAyDiB,EAAE5B,WAExEL,EAAKC,SAAS,CAACnC,YAAaiE,QAIpCO,iBAAmB,SAAAC,GACfvC,EAAKC,SAAS,CAACsB,eAAgBgB,EAAanE,QAGhDK,aAAe,WACXuB,EAAKC,SAAS,CAACtB,eAAe,OAGlCD,YAAc,WACV8D,WAAW,WACPxC,EAAKC,SAAS,CAACtB,eAAe,KAC/B,QAGP8D,sBAAwB,SAAArB,GACpBpB,EAAKC,SAAS,CAACuB,gBAAiBJ,6EAG3B,IAAAsB,EAKmB7E,KAAKF,MAJrB4D,EADHmB,EACGnB,eACJD,EAFCoB,EAEDpB,cACAxD,EAHC4E,EAGD5E,YACAa,EAJC+D,EAID/D,cACA6C,EALCkB,EAKDlB,gBAEJ,OACIpE,EAAAC,EAAAC,cAAA,OAAKU,UAAU,2BACXZ,EAAAC,EAAAC,cAACqF,EAAD,CACIzF,OAAQW,KAAKyE,iBACb9D,cAAeX,KAAKW,cACpBC,aAAcZ,KAAKY,aACnBC,YAAab,KAAKa,YAClBZ,YAAaA,EACba,cAAeA,IAEnBvB,EAAAC,EAAAC,cAACsF,EAAD,CACIjD,OAAQ4B,GAAkBD,EAC1BL,UAAQnD,EAAYkB,OAAS,GAAKL,GAClCgC,SAAUa,EACVZ,aAAc/C,KAAK4E,gCAhENpE,mBCDjCwE,iBAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.5eff7ac7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ListItem({city, select}) {\n\n    const {html} = city;\n\n    return (\n        <li onClick={() => select(city)} dangerouslySetInnerHTML={{__html: html}}></li>\n    )\n}\n\nexport default ListItem;\n","import React, {Component} from 'react';\n\nimport ListItem from './ListItem';\n\nclass AutoComplete extends Component {\n\n    state = {};\n\n    render() {\n        const {foundCities} = this.props;\n\n        return (\n            <ul className=\"hint-list\">\n                {foundCities.map(city => (\n                    <ListItem\n                        select={this.props.select}\n                        key={city.id}\n                        city={city}\n                    />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\nimport AutoComplete from './AutoComplete';\n\nexport default class Search extends Component {\n\n    render() {\n        const {foundCities, onSearchInput, onSearcFocus, onSearcBlur, searchFocused} = this.props;\n\n        return (\n            <div className='search-bar' onFocus={onSearcFocus} onBlur={onSearcBlur}>\n                <input\n                    className='search-field'\n                    type='search'\n                    onChange={onSearchInput}\n                />\n                {foundCities.length && searchFocused\n                    ? <AutoComplete select={this.props.select} foundCities={foundCities}/>\n                    : null}\n            </div>\n        )\n    }\n}\n","const apiURL = 'https://api.openweathermap.org/data/2.5/weather?id=';\nconst appID = '&APPID=1d0043e9a6077c0e96a2cea071bf251b';\n\nexport function API(cityId) {\n    return (apiURL + cityId + appID);\n}\n\nexport const cityList = require('./city.list.json');\n","import React, { Component } from \"react\"\nimport {API} from \"../Data\"\n\n\nexport default class CurrentWeather extends Component {\n    state = {\n        data: {},\n        availableUnits: ['C', 'F', 'K'],\n        isAvailableUnitsShown: false\n    }\n\n    getWeatherData = (id) => {\n        fetch( API(id) )\n            .then(response => response.json())\n            .then(response => this.setState({ data: response }))\n    }\n\n    toggleAvailableUnitsVisib = () => {\n        this.setState({isAvailableUnitsShown: !this.state.isAvailableUnitsShown});\n    }\n\n    componentDidMount() {\n        this.getWeatherData(this.props.cityId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.cityId !== prevProps.cityId) {\n            this.getWeatherData(this.props.cityId);\n        }\n    }\n\n    render() {\n        const {name} = this.state.data ? this.state.data : '';\n        const {country} = this.state.data.sys ? this.state.data.sys : '';\n        const {icon, description} = this.state.data.weather ? this.state.data.weather[0] : '';\n        const {availableUnits} = this.state;\n        const {unitType, onUnitChange} = this.props;\n\n        let {temp} = this.state.data.main ? this.state.data.main : '';\n        switch (unitType) {\n            case 'C': temp -= 273.15; break;\n            case 'F': temp = temp * 9/5 - 459.67; break;\n            default: break;\n        }\n        temp = temp.toFixed(1);\n\n        return (\n            <div className={`content ${this.props.blured ? 'blured' : ''}`}>\n                <h1 className=\"title\">{name} | {country}</h1>\n                <p className=\"description\">{description}</p>\n                <img className=\"weather-icon\" src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt={description}/>\n                <span className=\"temperature\">{temp}</span>\n                <ul className=\"temperature-units\">\n                    <li className=\"unit\" onClick={this.toggleAvailableUnitsVisib}>\n                        °{unitType}\n                    </li>\n                    {this.state.isAvailableUnitsShown\n                        ? availableUnits.map(unit =>\n                            unit !== unitType\n                                ? <li className=\"unit\" onClick={() => onUnitChange(unit)}>°{unit}</li>\n                                : null)\n                        : null\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\"\nimport Search from \"./Search\"\nimport {cityList} from '../Data';\nimport CurrentWeather from \"./CurrentWeather\"\n\n\nexport default class App extends Component {\n\n    state = {\n        defaultCityId: 703447,\n        selectedCityId: null,\n        foundCities: [],\n        searchFocused: false,\n        temperatureUnit: 'C'\n    }\n\n    onSearchInput = ( {target} ) => {\n        let userInput = target.value.replace(/[^\\w\\s]/gi, '');\n        if (userInput === '' || userInput === ' ') {\n            this.setState({foundCities: []});\n        } else {\n            let regex = new RegExp(userInput, 'i');\n            let relevantСities = cityList.filter( e => e.name.match(regex) ).sort();\n            let closestCities = relevantСities.slice(0, 6);\n            closestCities.forEach(e => {\n                e.html = e.name.replace(regex, match => `<u>${match}</u>`) + `, ${e.country}`\n            });\n            this.setState({foundCities: closestCities});\n        }\n    }\n\n    onListItemSelect = selectedCity => {\n        this.setState({selectedCityId: selectedCity.id});\n    }\n\n    onSearcFocus = () => {\n        this.setState({searchFocused: true});\n    }\n\n    onSearcBlur = () => {\n        setTimeout(() => {\n            this.setState({searchFocused: false})\n        }, 100)\n    }\n\n    changeTemperatureUnit = unit => {\n        this.setState({temperatureUnit: unit})\n    }\n\n    render() {\n        const { selectedCityId,\n            defaultCityId,\n            foundCities,\n            searchFocused,\n            temperatureUnit } = this.state\n\n        return (\n            <div className=\"container backdrop-blur\">\n                <Search\n                    select={this.onListItemSelect}\n                    onSearchInput={this.onSearchInput}\n                    onSearcFocus={this.onSearcFocus}\n                    onSearcBlur={this.onSearcBlur}\n                    foundCities={foundCities}\n                    searchFocused={searchFocused}\n                />\n                <CurrentWeather\n                    cityId={selectedCityId || defaultCityId}\n                    blured={foundCities.length > 0 && searchFocused ? true : false}\n                    unitType={temperatureUnit}\n                    onUnitChange={this.changeTemperatureUnit}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './js/components/App'\nimport './sass/main.sass'\n\nrender(<App/>, document.getElementById('app'))\n"],"sourceRoot":""}